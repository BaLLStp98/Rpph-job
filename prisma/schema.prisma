generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String               @id @default(cuid())
  lineId                String?              @unique @map("line_id")
  prefix                String?              @db.VarChar(10)
  firstName             String               @map("first_name") @db.VarChar(100)
  lastName              String               @map("last_name") @db.VarChar(100)
  lineDisplayName       String?              @map("line_display_name") @db.VarChar(100)
  email                 String               @unique @db.VarChar(255)
  phone                 String?              @db.VarChar(20)
  gender                Gender               @default(UNKNOWN)
  birthDate             DateTime?            @map("birth_date") @db.Date
  nationality           String?              @default("ไทย") @db.VarChar(50)
  religion              String?              @db.VarChar(50)
  maritalStatus         MaritalStatus        @default(UNKNOWN) @map("marital_status")
  address               String?              @db.Text
  province              String?              @db.VarChar(100)
  district              String?              @db.VarChar(100)
  subDistrict           String?              @map("sub_district") @db.VarChar(100)
  postalCode            String?              @map("postal_code") @db.VarChar(10)
  emergencyContact      String?              @map("emergency_contact") @db.VarChar(100)
  emergencyPhone        String?              @map("emergency_phone") @db.VarChar(20)
  isHospitalStaff       Boolean              @default(false) @map("is_hospital_staff")
  hospitalDepartment    String?              @map("hospital_department") @db.VarChar(100)
  username              String?              @unique @db.VarChar(50)
  password              String?              @db.VarChar(255)
  profileImageUrl       String?              @map("profile_image_url") @db.VarChar(255)
  status                UserStatus           @default(PENDING)
  department            String?              @db.VarChar(100)
  role                  UserRole             @default(APPLICANT)
  lastLogin             DateTime?            @map("last_login")
  createdAt             DateTime             @default(now()) @map("created_at")
  updatedAt             DateTime             @updatedAt @map("updated_at")
  age                   Int?
  emergencyRelationship String?              @map("emergency_relationship") @db.VarChar(50)
  idCardExpiryDate      DateTime?            @map("id_card_expiry_date") @db.Date
  idCardIssueDate       DateTime?            @map("id_card_issue_date") @db.Date
  idCardIssuedAt        String?              @map("id_card_issued_at") @db.VarChar(100)
  idNumber              String?              @map("id_number") @db.VarChar(20)
  placeOfBirth          String?              @map("place_of_birth") @db.VarChar(100)
  placeOfBirthProvince  String?              @map("place_of_birth_province") @db.VarChar(100)
  race                  String?              @db.VarChar(50)
  spouseFirstName       String?              @map("spouse_first_name") @db.VarChar(100)
  spouseLastName        String?              @map("spouse_last_name") @db.VarChar(100)
  applications          ApplicationForm[]
  education             UserEducation[]
  workExperience        UserWorkExperience[]
  resumeDeposits        ResumeDeposit[]

  @@map("users")
}

model UserEducation {
  id        Int      @id @default(autoincrement())
  userId    String   @map("user_id")
  level     String?  @db.VarChar(50)
  school    String?  @db.VarChar(200)
  major     String?  @db.VarChar(200)
  startYear String?  @map("start_year") @db.VarChar(10)
  endYear   String?  @map("end_year") @db.VarChar(10)
  gpa       Decimal? @db.Decimal(3, 2)
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "user_education_user_id_fkey")
  @@map("user_education")
}

model UserWorkExperience {
  id          Int       @id @default(autoincrement())
  userId      String    @map("user_id")
  position    String?   @db.VarChar(200)
  company     String?   @db.VarChar(200)
  startDate   DateTime? @map("start_date") @db.Date
  endDate     DateTime? @map("end_date") @db.Date
  isCurrent   Boolean   @default(false) @map("is_current")
  description String?   @db.Text
  salary      String?   @db.VarChar(50)
  district    String?   @db.VarChar(100)
  province    String?   @db.VarChar(100)
  phone       String?   @db.VarChar(20)
  createdAt   DateTime  @default(now()) @map("created_at")
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "user_work_experience_user_id_fkey")
  @@map("user_work_experience")
}

model ApplicationForm {
  id                                           String                                   @id @default(cuid())
  userId                                       String?                                  @map("user_id") @db.VarChar(50)
  lineId                                       String?                                  @map("line_id") @db.VarChar(50)
  resumeId                                     String?                                  @map("resume_id") @db.VarChar(50)
  submittedAt                                  DateTime                                 @default(now()) @map("submitted_at")
  status                                       ApplicationStatus                        @default(PENDING)
  prefix                                       String?                                  @db.VarChar(10)
  firstName                                    String                                   @map("first_name") @db.VarChar(100)
  lastName                                     String                                   @map("last_name") @db.VarChar(100)
  idNumber                                     String?                                  @map("id_number") @db.VarChar(20)
  idCardIssuedAt                               String?                                  @map("id_card_issued_at") @db.VarChar(100)
  idCardIssueDate                              DateTime?                                @map("id_card_issue_date") @db.Date
  idCardExpiryDate                             DateTime?                                @map("id_card_expiry_date") @db.Date
  birthDate                                    DateTime?                                @map("birth_date") @db.Date
  age                                          Int?
  race                                         String?                                  @db.VarChar(50)
  placeOfBirth                                 String?                                  @map("place_of_birth") @db.VarChar(100)
  placeOfBirthProvince                         String?                                  @map("place_of_birth_province") @db.VarChar(100)
  gender                                       Gender                                   @default(UNKNOWN)
  nationality                                  String?                                  @default("ไทย") @db.VarChar(50)
  religion                                     String?                                  @db.VarChar(50)
  maritalStatus                                MaritalStatus                            @default(UNKNOWN) @map("marital_status")
  address                                      String?                                  @db.Text
  addressAccordingToHouseRegistration          String?                                  @map("address_according_to_house_registration") @db.Text
  currentAddress                               String?                                  @map("current_address") @db.Text
  phone                                        String                                   @db.VarChar(20)
  email                                        String                                   @db.VarChar(255)
  emergencyContact                             String?                                  @map("emergency_contact") @db.VarChar(100)
  emergencyContactFirstName                    String?                                  @map("emergency_contact_first_name") @db.VarChar(100)
  emergencyContactLastName                     String?                                  @map("emergency_contact_last_name") @db.VarChar(100)
  emergencyPhone                               String?                                  @map("emergency_phone") @db.VarChar(20)
  emergencyRelationship                        String?                                  @map("emergency_relationship") @db.VarChar(50)
  emergencyAddress                             Json?                                    @map("emergency_address")
  emergency_workplace_name                     String?                                  @db.VarChar(200)
  emergency_workplace_district                 String?                                  @db.VarChar(100)
  emergency_workplace_province                 String?                                  @db.VarChar(100)
  emergency_workplace_phone                    String?                                  @db.VarChar(20)
  appliedPosition                              String?                                  @map("applied_position") @db.VarChar(200)
  expectedSalary                               String?                                  @map("expected_salary") @db.VarChar(50)
  availableDate                                DateTime?                                 @map("available_date") @db.Date
  department                                   String?                                  @db.VarChar(100)
  departmentId                                String?                                  @map("department_id") @db.VarChar(50)
  unit                                         String?                                  @db.VarChar(100)
  additionalInfo                               String?                                  @map("additional_info") @db.Text
  skills                                       String?                                  @db.Text
  languages                                    String?                                  @db.Text
  computerSkills                               String?                                  @map("computer_skills") @db.Text
  certificates                                 String?                                  @db.Text
  references                                   String?                                  @db.Text
  profileImageUrl                              String?                                  @map("profile_image_url") @db.VarChar(255)
  notes                                        String?                                  @db.Text
  reviewedBy                                   String?                                  @map("reviewed_by") @db.VarChar(100)
  reviewedAt                                   DateTime?                                @map("reviewed_at")
  createdAt                                    DateTime                                 @default(now()) @map("created_at")
  updatedAt                                    DateTime                                 @updatedAt @map("updated_at")
  house_registration_house_number              String?                                  @db.VarChar(20)
  house_registration_village_number            String?                                  @db.VarChar(20)
  house_registration_alley                     String?                                  @db.VarChar(100)
  house_registration_road                      String?                                  @db.VarChar(100)
  house_registration_sub_district              String?                                  @db.VarChar(100)
  house_registration_district                  String?                                  @db.VarChar(100)
  house_registration_province                  String?                                  @db.VarChar(100)
  house_registration_postal_code               String?                                  @db.VarChar(10)
  house_registration_phone                     String?                                  @db.VarChar(20)
  house_registration_mobile                    String?                                  @db.VarChar(20)
  current_address_house_number                 String?                                  @db.VarChar(20)
  current_address_village_number               String?                                  @db.VarChar(20)
  current_address_alley                        String?                                  @db.VarChar(100)
  current_address_road                         String?                                  @db.VarChar(100)
  current_address_sub_district                 String?                                  @db.VarChar(100)
  current_address_district                     String?                                  @db.VarChar(100)
  current_address_province                     String?                                  @db.VarChar(100)
  current_address_postal_code                  String?                                  @db.VarChar(10)
  current_address_phone                        String?                                  @db.VarChar(20)
  current_address_mobile                       String?                                  @db.VarChar(20)
  emergency_address_house_number               String?                                  @db.VarChar(20)
  emergency_address_village_number             String?                                  @db.VarChar(20)
  emergency_address_alley                      String?                                  @db.VarChar(100)
  emergency_address_road                       String?                                  @db.VarChar(100)
  emergency_address_sub_district               String?                                  @db.VarChar(100)
  emergency_address_district                   String?                                  @db.VarChar(100)
  emergency_address_province                   String?                                  @db.VarChar(100)
  emergency_address_postal_code                String?                                  @db.VarChar(10)
  emergency_address_phone                      String?                                  @db.VarChar(20)
  medical_rights_dont_want_to_change_hospital  Boolean                                  @default(false) @map("medical_rights_dont_want_to_change_hospital")
  medical_rights_has_civil_servant_rights      Boolean                                  @default(false) @map("medical_rights_has_civil_servant_rights")
  medical_rights_has_social_security           Boolean                                  @default(false) @map("medical_rights_has_social_security")
  medical_rights_has_universal_healthcare      Boolean                                  @default(false) @map("medical_rights_has_universal_healthcare")
  medical_rights_new_hospital                  String?                                  @map("medical_rights_new_hospital") @db.VarChar(200)
  medical_rights_other_rights                  String?                                  @map("medical_rights_other_rights") @db.Text
  medical_rights_social_security_hospital      String?                                  @map("medical_rights_social_security_hospital") @db.VarChar(200)
  medical_rights_universal_healthcare_hospital String?                                  @map("medical_rights_universal_healthcare_hospital") @db.VarChar(200)
  medical_rights_want_to_change_hospital       Boolean                                  @default(false) @map("medical_rights_want_to_change_hospital")
  multiple_employers                           String?                                  @map("multiple_employers") @db.Text
  spouse_first_name                            String?                                  @map("spouse_first_name") @db.VarChar(100)
  spouse_last_name                             String?                                  @map("spouse_last_name") @db.VarChar(100)
  staff_department                             String?                                  @map("staff_department") @db.VarChar(200)
  staff_position                               String?                                  @map("staff_position") @db.VarChar(200)
  staff_start_work                             String?                                  @map("staff_start_work") @db.VarChar(50)
  applicantSignature                           String?                                  @map("applicant_signature") @db.VarChar(255)
  applicationDate                              DateTime?                                 @map("application_date") @db.Date
  currentWork                                  Boolean                                  @default(false) @map("current_work")
  documents                                    ApplicationDocument[]
  education                                    ApplicationEducation[]
  user                                         User?                                    @relation(fields: [userId], references: [id])
  previousGovernmentService                    ApplicationPreviousGovernmentService[]
  workExperience                               ApplicationWorkExperience[]

  @@index([userId], map: "application_forms_user_id_fkey")
  @@index([lineId], map: "application_forms_line_id_fkey")
  @@index([resumeId], map: "application_forms_resume_id_fkey")
  @@map("application_forms")
}

model ApplicationEducation {
  id            Int             @id @default(autoincrement())
  applicationId String          @map("application_id")
  level         String?         @db.VarChar(50)
  institution   String?         @db.VarChar(200)
  major         String?         @db.VarChar(200)
  year          String?         @db.VarChar(10)
  gpa           Decimal?        @db.Decimal(3, 2)
  createdAt     DateTime        @default(now()) @map("created_at")
  application   ApplicationForm @relation(fields: [applicationId], references: [id], onDelete: Cascade)

  @@index([applicationId], map: "application_education_application_id_fkey")
  @@map("application_education")
}

model ApplicationWorkExperience {
  id            Int             @id @default(autoincrement())
  applicationId String          @map("application_id")
  position      String?         @db.VarChar(200)
  company       String?         @db.VarChar(200)
  startDate     DateTime?       @map("start_date") @db.Date
  endDate       DateTime?       @map("end_date") @db.Date
  salary        String?         @db.VarChar(50)
  reason        String?         @db.Text
  createdAt     DateTime        @default(now()) @map("created_at")
  application   ApplicationForm @relation(fields: [applicationId], references: [id], onDelete: Cascade)

  @@index([applicationId], map: "application_work_experience_application_id_fkey")
  @@map("application_work_experience")
}

model ApplicationPreviousGovernmentService {
  id            Int             @id @default(autoincrement())
  applicationId String          @map("application_id")
  position      String          @db.VarChar(200)
  department    String          @db.VarChar(200)
  reason        String          @db.Text
  date          String          @db.VarChar(50)
  type          String?         @default("civilServant") @db.VarChar(50)
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")
  application   ApplicationForm @relation(fields: [applicationId], references: [id], onDelete: Cascade)

  @@index([applicationId], map: "application_prev_gov_service_application_id_fkey")
  @@map("application_previous_government_service")
}

model ApplicationDocument {
  id            Int             @id @default(autoincrement())
  applicationId String          @map("application_id")
  documentType  String          @map("document_type") @db.VarChar(100)
  fileName      String          @map("file_name") @db.VarChar(255)
  filePath      String?         @map("file_path") @db.VarChar(500)
  fileSize      Int?            @map("file_size")
  mimeType      String?         @map("mime_type") @db.VarChar(100)
  createdAt     DateTime        @default(now()) @map("created_at")
  application   ApplicationForm @relation(fields: [applicationId], references: [id], onDelete: Cascade)

  @@index([applicationId], map: "application_documents_application_id_fkey")
  @@map("application_documents")
}

model HospitalDepartment {
  id            Int          @id @default(autoincrement())
  name          String       @db.VarChar(200)
  description   String?      @db.Text
  isActive      Boolean      @default(true) @map("is_active")
  missionGroupId String?     @map("mission_group_id") @db.VarChar(50)
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")
  
  missionGroup  MissionGroup? @relation(fields: [missionGroupId], references: [id])

  @@map("hospital_departments")
}

model MissionGroup {
  id                String               @id @default(cuid())
  name              String               @db.VarChar(200)
  description       String?              @db.Text
  status            String               @default("ACTIVE") @db.VarChar(20)
  createdAt         DateTime             @default(now()) @map("created_at")
  updatedAt         DateTime             @updatedAt @map("updated_at")
  departments       Department[]
  hospitalDepartments HospitalDepartment[]

  @@map("mission_groups")
}

model Department {
  id                   String                 @id @default(cuid())
  name                 String                 @db.VarChar(200)
  code                 String                 @db.VarChar(20)
  description          String?                @db.Text
  manager              String?                @db.VarChar(200)
  managerEmail         String?                @map("manager_email") @db.VarChar(255)
  managerPhone         String?                @map("manager_phone") @db.VarChar(20)
  location             String?                @db.VarChar(200)
  employeeCount        Int                    @default(0) @map("employee_count")
  status               DepartmentStatus       @default(ACTIVE)
  salary               String?                @db.VarChar(100)
  applicationStartDate DateTime?              @map("application_start_date") @db.Date
  applicationEndDate   DateTime?              @map("application_end_date") @db.Date
  education            String?                @db.Text
  gender               Gender                 @default(UNKNOWN)
  positions            String?                @db.Text
  missionGroupId       String?                @map("mission_group_id") @db.VarChar(50)
  createdAt            DateTime               @default(now()) @map("created_at")
  updatedAt            DateTime               @updatedAt @map("updated_at")
  attachments          DepartmentAttachment[]
  missionGroup         MissionGroup?          @relation(fields: [missionGroupId], references: [id])

  @@map("departments")
}

model DepartmentAttachment {
  id           Int        @id @default(autoincrement())
  departmentId String     @map("department_id")
  path         String     @db.VarChar(500)
  filename     String     @db.VarChar(255)
  createdAt    DateTime   @default(now()) @map("created_at")
  originalName String?    @map("original_name") @db.VarChar(255)
  department   Department @relation(fields: [departmentId], references: [id], onDelete: Cascade)

  @@index([departmentId], map: "department_attachments_department_id_fkey")
  @@map("department_attachments")
}

model ContractRenewal {
  id                String                      @id @default(cuid())
  employeeId        String                      @db.VarChar(50)
  employeeName      String                      @db.VarChar(200)
  department        String                      @db.VarChar(200)
  position          String                      @db.VarChar(200)
  newStartDate      DateTime?                   @map("new_start_date") @db.Date
  newEndDate        DateTime?                   @map("new_end_date") @db.Date
  contractStartDate DateTime?                   @map("contract_start_date") @db.Date
  contractEndDate   DateTime?                   @map("contract_end_date") @db.Date
  notes             String?                     @db.Text
  status            ContractRenewalStatus       @default(PENDING)
  createdAt         DateTime                    @default(now()) @map("created_at")
  updatedAt         DateTime                    @updatedAt @map("updated_at")
  attachments       ContractRenewalAttachment[]

  @@map("contract_renewals")
}

model ContractRenewalAttachment {
  id                Int             @id @default(autoincrement())
  contractRenewalId String          @map("contract_renewal_id")
  fileName          String          @map("file_name") @db.VarChar(255)
  filePath          String?         @map("file_path") @db.VarChar(500)
  mimeType          String?         @map("mime_type") @db.VarChar(100)
  fileSize          Int?            @map("file_size")
  createdAt         DateTime        @default(now()) @map("created_at")
  contractRenewal   ContractRenewal @relation(fields: [contractRenewalId], references: [id], onDelete: Cascade)

  @@index([contractRenewalId], map: "contract_renewal_attachments_contract_renewal_id_fkey")
  @@map("contract_renewal_attachments")
}

model ResumeDeposit {
  id                                           String                                   @id @default(cuid())
  userId                                       String?                                  @map("user_id") @db.VarChar(50)
  lineId                                       String?                                  @map("line_id") @db.VarChar(50)
  prefix                                       String?                                  @db.VarChar(10)
  firstName                                    String                                   @map("first_name") @db.VarChar(100)
  lastName                                     String                                   @map("last_name") @db.VarChar(100)
  idNumber                                     String?                                  @map("id_number") @db.VarChar(20)
  idCardIssuedAt                               String?                                  @map("id_card_issued_at") @db.VarChar(100)
  idCardIssueDate                              DateTime?                                @map("id_card_issue_date") @db.Date
  idCardExpiryDate                             DateTime?                                @map("id_card_expiry_date") @db.Date
  birthDate                                    DateTime?                                @map("birth_date") @db.Date
  age                                          Int?
  race                                         String?                                  @db.VarChar(50)
  placeOfBirth                                 String?                                  @map("place_of_birth") @db.VarChar(100)
  placeOfBirthProvince                         String?                                  @map("place_of_birth_province") @db.VarChar(100)
  gender                                       Gender                                   @default(UNKNOWN)
  nationality                                  String?                                  @default("ไทย") @db.VarChar(50)
  religion                                     String?                                  @db.VarChar(50)
  maritalStatus                                MaritalStatus                            @default(UNKNOWN) @map("marital_status")
  address                                      String?                                  @db.Text
  addressAccordingToHouseRegistration          String?                                  @map("address_according_to_house_registration") @db.Text
  phone                                        String                                   @db.VarChar(20)
  email                                        String                                   @db.VarChar(255)
  emergencyContact                             String?                                  @map("emergency_contact") @db.VarChar(100)
  emergencyContactFirstName                    String?                                  @map("emergency_contact_first_name") @db.VarChar(100)
  emergencyContactLastName                     String?                                  @map("emergency_contact_last_name") @db.VarChar(100)
  emergencyPhone                               String?                                  @map("emergency_phone") @db.VarChar(20)
  emergencyRelationship                        String?                                  @map("emergency_relationship") @db.VarChar(50)
  emergencyAddress                             Json?                                    @map("emergency_address")
  emergency_workplace_name                     String?                                  @db.VarChar(200)
  emergency_workplace_district                 String?                                  @db.VarChar(100)
  emergency_workplace_province                 String?                                  @db.VarChar(100)
  emergency_workplace_phone                    String?                                  @db.VarChar(20)
  skills                                       String?                                  @db.Text
  languages                                    String?                                  @db.Text
  computerSkills                               String?                                  @map("computer_skills") @db.Text
  certificates                                 String?                                  @db.Text
  references                                   String?                                  @db.Text
  expectedPosition                             String?                                  @map("expected_position") @db.VarChar(200)
  expectedSalary                               String?                                  @map("expected_salary") @db.VarChar(50)
  availableDate                                DateTime?                                @map("available_date") @db.Date
  department                                   String?                                  @db.VarChar(100)
  unit                                         String?                                  @db.VarChar(100)
  additionalInfo                               String?                                  @map("additional_info") @db.Text
  profileImageUrl                              String?                                  @map("profile_image_url") @db.VarChar(255)
  status                                       ResumeDepositStatus                      @default(PENDING)
  notes                                        String?                                  @db.Text
  reviewedBy                                   String?                                  @map("reviewed_by") @db.VarChar(100)
  reviewedAt                                   DateTime?                                @map("reviewed_at")
  createdAt                                    DateTime                                 @default(now()) @map("created_at")
  updatedAt                                    DateTime                                 @updatedAt @map("updated_at")
  house_registration_house_number              String?                                  @db.VarChar(20)
  house_registration_village_number            String?                                  @db.VarChar(20)
  house_registration_alley                     String?                                  @db.VarChar(100)
  house_registration_road                      String?                                  @db.VarChar(100)
  house_registration_sub_district              String?                                  @db.VarChar(100)
  house_registration_district                  String?                                  @db.VarChar(100)
  house_registration_province                  String?                                  @db.VarChar(100)
  house_registration_postal_code               String?                                  @db.VarChar(10)
  house_registration_phone                     String?                                  @db.VarChar(20)
  house_registration_mobile                    String?                                  @db.VarChar(20)
  current_address_house_number                 String?                                  @db.VarChar(20)
  current_address_village_number               String?                                  @db.VarChar(20)
  current_address_alley                        String?                                  @db.VarChar(100)
  current_address_road                         String?                                  @db.VarChar(100)
  current_address_sub_district                 String?                                  @db.VarChar(100)
  current_address_district                     String?                                  @db.VarChar(100)
  current_address_province                     String?                                  @db.VarChar(100)
  current_address_postal_code                  String?                                  @db.VarChar(10)
  current_address_phone                        String?                                  @db.VarChar(20)
  current_address_mobile                       String?                                  @db.VarChar(20)
  emergency_address_house_number               String?                                  @db.VarChar(20)
  emergency_address_village_number             String?                                  @db.VarChar(20)
  emergency_address_alley                      String?                                  @db.VarChar(100)
  emergency_address_road                       String?                                  @db.VarChar(100)
  emergency_address_sub_district               String?                                  @db.VarChar(100)
  emergency_address_district                   String?                                  @db.VarChar(100)
  emergency_address_province                   String?                                  @db.VarChar(100)
  emergency_address_postal_code                String?                                  @db.VarChar(10)
  emergency_address_phone                      String?                                  @db.VarChar(20)
  medical_rights_dont_want_to_change_hospital  Boolean                                  @default(false) @map("medical_rights_dont_want_to_change_hospital")
  medical_rights_has_civil_servant_rights      Boolean                                  @default(false) @map("medical_rights_has_civil_servant_rights")
  medical_rights_has_social_security           Boolean                                  @default(false) @map("medical_rights_has_social_security")
  medical_rights_has_universal_healthcare      Boolean                                  @default(false) @map("medical_rights_has_universal_healthcare")
  medical_rights_new_hospital                  String?                                  @map("medical_rights_new_hospital") @db.VarChar(200)
  medical_rights_other_rights                  String?                                  @map("medical_rights_other_rights") @db.Text
  medical_rights_social_security_hospital      String?                                  @map("medical_rights_social_security_hospital") @db.VarChar(200)
  medical_rights_universal_healthcare_hospital String?                                  @map("medical_rights_universal_healthcare_hospital") @db.VarChar(200)
  medical_rights_want_to_change_hospital       Boolean                                  @default(false) @map("medical_rights_want_to_change_hospital")
  multiple_employers                           String?                                  @map("multiple_employers") @db.Text
  spouse_first_name                            String?                                  @map("spouse_first_name") @db.VarChar(100)
  spouse_last_name                             String?                                  @map("spouse_last_name") @db.VarChar(100)
  staff_department                             String?                                  @map("staff_department") @db.VarChar(200)
  staff_position                               String?                                  @map("staff_position") @db.VarChar(200)
  staff_start_work                             String?                                  @map("staff_start_work") @db.VarChar(50)
  applicantSignature                           String?                                  @map("applicant_signature") @db.VarChar(255)
  applicationDate                              DateTime?                                @map("application_date") @db.Date
  currentWork                                  Boolean                                  @default(false) @map("current_work")
  documents                                    ResumeDepositDocument[]
  education                                    ResumeDepositEducation[]
  previousGovernmentService                    ResumeDepositPreviousGovernmentService[]
  workExperience                               ResumeDepositWorkExperience[]
  user                                         User?                                    @relation(fields: [userId], references: [id])

  @@index([userId], map: "resume_deposits_user_id_idx")

  @@map("resume_deposits")
}

model ResumeDepositEducation {
  id              Int           @id @default(autoincrement())
  resumeDepositId String        @map("resume_deposit_id")
  level           String        @db.VarChar(100)
  school          String        @db.VarChar(200)
  major           String?       @db.VarChar(200)
  startYear       String?       @map("start_year") @db.VarChar(10)
  endYear         String?       @map("end_year") @db.VarChar(10)
  gpa             Float?
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")
  resumeDeposit   ResumeDeposit @relation(fields: [resumeDepositId], references: [id], onDelete: Cascade)

  @@index([resumeDepositId], map: "resume_deposit_education_resume_deposit_id_fkey")
  @@map("resume_deposit_education")
}

model ResumeDepositWorkExperience {
  id              Int           @id @default(autoincrement())
  resumeDepositId String        @map("resume_deposit_id")
  position        String        @db.VarChar(200)
  company         String        @db.VarChar(200)
  startDate       DateTime?     @map("start_date") @db.Date
  endDate         DateTime?     @map("end_date") @db.Date
  isCurrent       Boolean       @default(false) @map("is_current")
  description     String?       @db.Text
  salary          String?       @db.VarChar(50)
  district        String?       @db.VarChar(100)
  province        String?       @db.VarChar(100)
  phone           String?       @db.VarChar(20)
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")
  resumeDeposit   ResumeDeposit @relation(fields: [resumeDepositId], references: [id], onDelete: Cascade)

  @@index([resumeDepositId], map: "resume_deposit_work_experience_resume_deposit_id_fkey")
  @@map("resume_deposit_work_experience")
}

model ResumeDepositPreviousGovernmentService {
  id              Int           @id @default(autoincrement())
  resumeDepositId String        @map("resume_deposit_id")
  position        String        @db.VarChar(200)
  department      String        @db.VarChar(200)
  reason          String        @db.Text
  date            String        @db.VarChar(50)
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")
  type            String?       @default("civilServant") @db.VarChar(50)
  resumeDeposit   ResumeDeposit @relation(fields: [resumeDepositId], references: [id], onDelete: Cascade)

  @@index([resumeDepositId], map: "resume_deposit_prev_gov_service_resume_deposit_id_fkey")
  @@map("resume_deposit_previous_government_service")
}

model ResumeDepositDocument {
  id              Int           @id @default(autoincrement())
  resumeDepositId String        @map("resume_deposit_id")
  documentType    String        @map("document_type") @db.VarChar(100)
  fileName        String        @map("file_name") @db.VarChar(255)
  filePath        String?       @map("file_path") @db.VarChar(500)
  fileSize        Int?          @map("file_size")
  mimeType        String?       @map("mime_type") @db.VarChar(100)
  createdAt       DateTime      @default(now()) @map("created_at")
  resumeDeposit   ResumeDeposit @relation(fields: [resumeDepositId], references: [id], onDelete: Cascade)

  @@index([resumeDepositId], map: "resume_deposit_documents_resume_deposit_id_fkey")
  @@map("resume_deposit_documents")
}

enum Gender {
  MALE
  FEMALE
  UNKNOWN
}

enum MaritalStatus {
  SINGLE
  MARRIED
  DIVORCED
  WIDOWED
  UNKNOWN
}

enum UserStatus {
  PENDING
  ACTIVE
  INACTIVE
}

enum UserRole {
  HOSPITAL_STAFF
  APPLICANT
}

enum ApplicationStatus {
  PENDING
  APPROVED
  REJECTED
}

enum DepartmentStatus {
  ACTIVE
  INACTIVE
  PENDING
}

enum ContractRenewalStatus {
  PENDING
  APPROVED
  REJECTED
}

enum ResumeDepositStatus {
  PENDING
  REVIEWING
  CONTACTED
  HIRED
  REJECTED
  ARCHIVED
}
