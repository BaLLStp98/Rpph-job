const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function testMissionGroups() {
  console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à...\n');
  
  try {
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à
    console.log('üìù ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à:');
    const missionGroups = await prisma.$queryRawUnsafe(`
      SELECT id, name, code, \`order\`, status 
      FROM mission_groups 
      WHERE status = 'ACTIVE' 
      ORDER BY \`order\` ASC
    `);
    
    console.log(`‚úÖ ‡∏û‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à: ${missionGroups.length} ‡∏Å‡∏•‡∏∏‡πà‡∏°`);
    missionGroups.forEach(group => {
      console.log(`   - ${group.name} (${group.code}) - ‡∏•‡∏≥‡∏î‡∏±‡∏ö: ${group.order}`);
    });
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ù‡πà‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à
    console.log('\nüìù ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ù‡πà‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à:');
    for (const group of missionGroups) {
      const departments = await prisma.$queryRawUnsafe(`
        SELECT id, name, code 
        FROM departments 
        WHERE mission_group_id = ? 
        ORDER BY name ASC
      `, group.id);
      
      console.log(`\n   üìä ${group.name}:`);
      console.log(`      ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ù‡πà‡∏≤‡∏¢: ${departments.length} ‡∏ù‡πà‡∏≤‡∏¢`);
      departments.forEach(dept => {
        console.log(`      - ${dept.name} (${dept.code})`);
      });
    }
    
    // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏°
    console.log('\nüìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏°:');
    const totalDepartments = await prisma.$queryRawUnsafe(`
      SELECT COUNT(*) as count FROM departments
    `);
    const departmentsWithMissionGroup = await prisma.$queryRawUnsafe(`
      SELECT COUNT(*) as count FROM departments WHERE mission_group_id IS NOT NULL
    `);
    
    console.log(`   - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalDepartments[0].count} ‡∏ù‡πà‡∏≤‡∏¢`);
    console.log(`   - ‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à: ${departmentsWithMissionGroup[0].count} ‡∏ù‡πà‡∏≤‡∏¢`);
    console.log(`   - ‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à: ${totalDepartments[0].count - departmentsWithMissionGroup[0].count} ‡∏ù‡πà‡∏≤‡∏¢`);
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
testMissionGroups();
