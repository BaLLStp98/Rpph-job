'use client';

import React, { useState, useEffect } from 'react';
import {
  Card,
  CardHeader,
  CardBody,
  Badge,
  Button,
  Chip,
  Avatar,
  Spinner,
  Table,
  TableHeader,
  TableColumn,
  TableBody,
  TableRow,
  TableCell,
  Input,
  Select,
  SelectItem,
  Modal,
  ModalContent,
  ModalHeader,
  ModalBody,
  ModalFooter,
  useDisclosure
} from '@heroui/react';
import {
  UserIcon,
  DocumentTextIcon,
  MagnifyingGlassIcon,
  UsersIcon,
  ClockIcon,
  CheckCircleIcon,
  XCircleIcon,
  ArrowPathIcon,
  EyeIcon,
  AcademicCapIcon,
  BriefcaseIcon
} from '@heroicons/react/24/outline';

interface ApplicationData {
  id: string;
  prefix: string;
  firstName: string;
  lastName: string;
  age: number;
  race: string;
  nationality: string;
  religion: string;
  maritalStatus: string;
  idNumber: string;
  idCardIssuedAt: string;
  idCardIssueDate: string;
  idCardExpiryDate: string;
  addressAccordingToHouseRegistration: string;
  currentAddress: string;
  emergencyContact: string;
  emergencyRelationship: string;
  emergencyPhone: string;
  emergencyAddress: string;
  appliedPosition: string;
  department: string;
  phone: string;
  email: string;
  status: string;
  createdAt: string;
  updatedAt: string;
  profileImage?: string;
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô
  expectedSalary?: string;
  availableDate?: string;
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
  education?: Array<{
    level: string;
    degree: string;
    major: string;
    institution: string;
    school: string;
    year?: string;
    endYear?: string;
    gpa?: string;
  }>;
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
  workExperience?: Array<{
    company: string;
    position: string;
    startDate: string;
    endDate: string;
    district: string;
    province: string;
    phone: string;
    reason: string;
    description?: string;
    salary?: string;
  }>;
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
  previousGovernmentService?: Array<{
    position: string;
    department: string;
    reason: string;
    date: string;
    type?: string;
  }>;
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
  skills?: string;
  languages?: string;
  computerSkills?: string;
  certificates?: string;
  references?: string;
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏π‡πà‡∏™‡∏°‡∏£‡∏™
  spouseInfo?: {
    firstName: string;
    lastName: string;
  };
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô
  emergencyWorkplace?: {
    name: string;
    district: string;
    province: string;
    phone: string;
  };
}

export default function AdminPage() {
  const [applications, setApplications] = useState<ApplicationData[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [searchTerm, setSearchTerm] = useState('');
  const [statusFilter, setStatusFilter] = useState('all');
  const [selectedApplication, setSelectedApplication] = useState<ApplicationData | null>(null);
  const [showDetailModal, setShowDetailModal] = useState(false);
  const [showPreviewModal, setShowPreviewModal] = useState(false);
  const [previewFile, setPreviewFile] = useState<{ url: string; name: string; type: string } | null>(null);
  const [uploadedDocuments, setUploadedDocuments] = useState<any[]>([]);
  
  // Modal controls
  const { isOpen: isDetailModalOpen, onOpen: onDetailModalOpen, onOpenChange: onDetailModalOpenChange } = useDisclosure();

  // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
  const [stats, setStats] = useState({
    total: 0,
    pending: 0,
    approved: 0,
    rejected: 0
  });

  useEffect(() => {
    fetchApplications();
  }, []);

  const fetchApplications = async () => {
    try {
      setLoading(true);
      setError(null);
      console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å /api/resume-deposit...');
      
      const response = await fetch('/api/resume-deposit', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });
      
      if (response.ok) {
        const responseData = await response.json();
        console.log('‚úÖ Response Data:', responseData);
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö response structure
        if (responseData.success && responseData.data) {
          const data = responseData.data;
          console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data);
          setApplications(data);
          
          // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
          const newStats = {
            total: data.length,
            pending: data.filter((app: ApplicationData) => app.status === 'pending').length,
            approved: data.filter((app: ApplicationData) => app.status === 'approved').length,
            rejected: data.filter((app: ApplicationData) => app.status === 'rejected').length
          };
          setStats(newStats);
          console.log('üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥:', newStats);
        } else {
          console.error('‚ùå Invalid response structure:', responseData);
          setError('‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
        }
      } else {
        const errorText = await response.text();
        console.error('‚ùå Failed to fetch applications:', response.status, errorText);
        setError(`‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ (${response.status})`);
      }
    } catch (error) {
      console.error('‚ùå Error fetching applications:', error);
      setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠');
    } finally {
      setLoading(false);
    }
  };

  const handleViewDetails = async (application: ApplicationData) => {
    setSelectedApplication(application);
    onDetailModalOpen();
    
    // Debug: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• profileImage
    console.log('üîç Selected Application:', application);
    console.log('üîç Profile Image:', application.profileImage);
    console.log('üîç Profile Image Type:', typeof application.profileImage);
    console.log('üîç Profile Image Length:', application.profileImage?.length);
    
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö
    try {
      const response = await fetch(`/api/resume-documents?applicationId=${application.id}`);
      if (response.ok) {
        const responseData = await response.json();
        if (responseData.success && responseData.data) {
          setUploadedDocuments(responseData.data);
          console.log('üìÑ Uploaded Documents:', responseData.data);
        }
      }
    } catch (error) {
      console.error('Error fetching documents:', error);
    }
  };

  const handleCloseDetailModal = () => {
    setSelectedApplication(null);
    setShowDetailModal(false);
  };

  const handlePreviewFile = (filePath: string, fileName: string) => {
    setPreviewFile({
      url: filePath,
      name: fileName,
      type: fileName.split('.').pop()?.toLowerCase() || 'unknown'
    });
    setShowPreviewModal(true);
  };

  const handleClosePreviewModal = () => {
    setShowPreviewModal(false);
    setPreviewFile(null);
  };

  const handleStatusChange = async (applicationId: string, newStatus: string) => {
    try {
      const response = await fetch(`/api/resume-deposit/${applicationId}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ status: newStatus }),
      });

      if (response.ok) {
        const responseData = await response.json();
        if (responseData.success) {
          await fetchApplications();
          alert(`‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô: ${getStatusText(newStatus)}`);
          handleCloseDetailModal();
        } else {
          throw new Error(responseData.message || 'Failed to update status');
        }
      } else {
        throw new Error('Failed to update status');
      }
    } catch (error) {
      console.error('Error updating status:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞');
    }
  };

  const getStatusText = (status: string) => {
    const statusMap: { [key: string]: string } = {
      pending: '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
      approved: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
      rejected: '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò'
    };
    return statusMap[status] || status;
  };

  const getStatusColor = (status: string) => {
    const colorMap: { [key: string]: string } = {
      pending: 'warning',
      approved: 'success',
      rejected: 'danger'
    };
    return colorMap[status] || 'default';
  };

  const filteredApplications = applications.filter(app => {
    const matchesSearch = 
      app.firstName.toLowerCase().includes(searchTerm.toLowerCase()) ||
      app.lastName.toLowerCase().includes(searchTerm.toLowerCase()) ||
      app.email.toLowerCase().includes(searchTerm.toLowerCase()) ||
      app.appliedPosition.toLowerCase().includes(searchTerm.toLowerCase());
    
    const matchesStatus = statusFilter === 'all' || app.status === statusFilter;
    
    return matchesSearch && matchesStatus;
  });

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <Spinner size="lg" />
          <p className="mt-4 text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="bg-red-50 border border-red-200 rounded-lg p-6 max-w-md">
            <div className="text-red-600 mb-4">
              <svg className="w-12 h-12 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 19.5c-.77.833.192 2.5 1.732 2.5z" />
              </svg>
            </div>
            <h3 className="text-lg font-semibold text-red-800 mb-2">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>
            <p className="text-red-600 mb-4">{error}</p>
            <Button
              color="primary"
              onPress={fetchApplications}
              startContent={<ArrowPathIcon className="w-4 h-4" />}
            >
              ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
            </Button>
          </div>
        </div>
      </div>
    );
  }

    return (
    <div className="p-4 lg:p-6">
      {/* Page Header */}
      <div className="mb-6 lg:mb-8">
        <div className="flex flex-col lg:flex-row lg:justify-between lg:items-center gap-4 mb-4">
            <div>
            <h1 className="text-2xl lg:text-3xl font-bold text-gray-900">‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô</h1>
            <p className="mt-2 text-gray-600">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô</p>
          </div>
                      <div className="flex items-center gap-4">
              <Button
              color="primary"
              startContent={<ArrowPathIcon className="w-4 h-4 lg:w-5 lg:h-5" />}
              onPress={fetchApplications}
                size="sm"
              className="lg:size-md"
            >
              ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
              </Button>
            </div>
          </div>
        </div>

      <div className="space-y-8">
          {/* ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ */}
        <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6">
          <Card className="bg-gradient-to-r from-blue-500 to-blue-600 text-white">
            <CardBody className="p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-blue-100 text-sm lg:text-base">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
                  <p className="text-2xl lg:text-3xl font-bold">{stats.total}</p>
                </div>
                <UsersIcon className="w-6 h-6 lg:w-8 lg:h-8 text-blue-200" />
              </div>
            </CardBody>
          </Card>

          <Card className="bg-gradient-to-r from-yellow-500 to-yellow-600 text-white">
            <CardBody className="p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-yellow-100 text-sm lg:text-base">‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</p>
                  <p className="text-2xl lg:text-3xl font-bold">{stats.pending}</p>
                </div>
                <ClockIcon className="w-6 h-6 lg:w-8 lg:h-8 text-yellow-200" />
              </div>
            </CardBody>
          </Card>

          <Card className="bg-gradient-to-r from-green-500 to-green-600 text-white">
            <CardBody className="p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-green-100 text-sm lg:text-base">‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</p>
                  <p className="text-2xl lg:text-3xl font-bold">{stats.approved}</p>
                </div>
                <CheckCircleIcon className="w-6 h-6 lg:w-8 lg:h-8 text-green-200" />
              </div>
            </CardBody>
          </Card>

          <Card className="bg-gradient-to-r from-red-500 to-red-600 text-white">
            <CardBody className="p-4 lg:p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-red-100 text-sm lg:text-base">‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò</p>
                  <p className="text-2xl lg:text-3xl font-bold">{stats.rejected}</p>
                </div>
                <XCircleIcon className="w-6 h-6 lg:w-8 lg:h-8 text-red-200" />
              </div>
            </CardBody>
          </Card>
        </div>

        {/* ‡∏ü‡∏¥‡∏•‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
        <Card>
          <CardBody className="p-4 lg:p-6">
            <div className="flex flex-col lg:flex-row gap-4">
              <div className="flex-1">
                <Input
                  placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠, ‡∏≠‡∏µ‡πÄ‡∏°‡∏•, ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  startContent={<MagnifyingGlassIcon className="w-4 h-4 lg:w-5 lg:h-5 text-gray-400" />}
                  className="w-full"
                  size="sm"
                />
              </div>
              <div className="flex gap-4">
                <Select
                  placeholder="‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞"
                  selectedKeys={[statusFilter]}
                  onSelectionChange={(keys) => setStatusFilter(Array.from(keys)[0] as string)}
                  className="w-full lg:w-48"
                  size="sm"
                >
                  <SelectItem key="all">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</SelectItem>
                  <SelectItem key="pending">‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</SelectItem>
                  <SelectItem key="approved">‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</SelectItem>
                  <SelectItem key="rejected">‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò</SelectItem>
                </Select>
              </div>
            </div>
          </CardBody>
        </Card>

        {/* ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
        <Card>
          <CardHeader>
            <h2 className="text-xl font-semibold">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô</h2>
          </CardHeader>
          <CardBody>
            {filteredApplications.length === 0 ? (
              <div className="text-center py-12">
                <div className="text-gray-400 mb-4">
                  <svg className="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                </div>
                <h3 className="text-lg font-semibold text-gray-600 mb-2">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô</h3>
                <p className="text-gray-500 mb-4">
                  {applications.length === 0 
                    ? '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö' 
                    : '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤'
                  }
                </p>
                {applications.length === 0 && (
                  <Button
                    color="primary"
                    onPress={fetchApplications}
                    startContent={<ArrowPathIcon className="w-4 h-4" />}
                  >
                    ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                  </Button>
                )}
              </div>
            ) : (
              <Table aria-label="Applications table">
                <TableHeader>
                  <TableColumn>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</TableColumn>
                  <TableColumn>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£</TableColumn>
                  <TableColumn>‡∏ù‡πà‡∏≤‡∏¢/‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô</TableColumn>
                  <TableColumn>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</TableColumn>
                  <TableColumn>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£</TableColumn>
                  <TableColumn>‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</TableColumn>
                </TableHeader>
                <TableBody>
                  {filteredApplications.map((application) => (
                  <TableRow key={application.id}>
                    <TableCell>
                      <div className="flex items-center gap-3">
                        <Avatar
                          src={application.profileImage}
                          name={`${application.firstName} ${application.lastName}`}
                          size="sm"
                        />
                        <div>
                          <p className="font-medium">
                            {application.prefix} {application.firstName} {application.lastName}
                          </p>
                          <p className="text-sm text-gray-500">{application.email}</p>
                        </div>
                      </div>
                    </TableCell>
                    <TableCell>
                      <p className="font-medium">{application.appliedPosition}</p>
                    </TableCell>
                    <TableCell>
                      <p className="text-gray-600">{application.department}</p>
                    </TableCell>
                    <TableCell>
                      <Chip
                        color={getStatusColor(application.status) as any}
                        variant="flat"
                        size="sm"
                      >
                        {getStatusText(application.status)}
                      </Chip>
                    </TableCell>
                    <TableCell>
                      <p className="text-sm text-gray-600">
                        {new Date(application.createdAt).toLocaleDateString('th-TH')}
                      </p>
                    </TableCell>
                    <TableCell>
                      <div className="flex items-center gap-2">
                      <Button
                        size="sm"
                        color="primary"
                          variant="flat"
                        startContent={<EyeIcon className="w-4 h-4" />}
                          onPress={() => handleViewDetails(application)}
                      >
                        ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                      </Button>
                      </div>
                    </TableCell>
                  </TableRow>
                  ))}
                </TableBody>
              </Table>
            )}
          </CardBody>
        </Card>
      </div>

      {/* Detail Modal */}
      <Modal 
        isOpen={isDetailModalOpen} 
        onOpenChange={onDetailModalOpenChange}
        size="5xl"
        scrollBehavior="inside"
        classNames={{
          base: "max-h-[90vh]",
          body: "py-6",
          backdrop: "bg-black/50 backdrop-blur-sm",
        }}
      >
        <ModalContent>
          {(onClose) => (
            <>
              <ModalHeader className="flex flex-col gap-1">
                <h3 className="text-lg font-semibold text-gray-800">
                  ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô: {selectedApplication?.prefix ? `${selectedApplication.prefix} ` : ''}{selectedApplication?.firstName} {selectedApplication?.lastName}
                </h3>
              </ModalHeader>
              <ModalBody>
                {selectedApplication && (
                  <div className="space-y-6">
                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß */}
                    <div className="bg-gray-50 rounded-lg p-4">
                      <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                        <UserIcon className="w-5 h-5" />
                        ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
                      </h4>
                      <div className="grid grid-cols-2 gap-4">
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤</label>
                          <p className="text-gray-800">{selectedApplication?.prefix || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏ä‡∏∑‡πà‡∏≠</label>
                          <p className="text-gray-800">{selectedApplication?.firstName || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</label>
                          <p className="text-gray-800">{selectedApplication?.lastName || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏≠‡∏≤‡∏¢‡∏∏</label>
                          <p className="text-gray-800">{selectedApplication?.age || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏ä‡∏≤‡∏ï‡∏¥</label>
                          <p className="text-gray-800">{selectedApplication?.race || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏™‡∏±‡∏ç‡∏ä‡∏≤‡∏ï‡∏¥</label>
                          <p className="text-gray-800">{selectedApplication?.nationality || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏®‡∏≤‡∏™‡∏ô‡∏≤</label>
                          <p className="text-gray-800">{selectedApplication?.religion || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏™‡∏ñ‡∏≤‡∏ô‡∏†‡∏≤‡∏û</label>
                          <p className="text-gray-800">{selectedApplication?.maritalStatus || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</label>
                          <p className="text-gray-800">{selectedApplication?.phone || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
                          <p className="text-gray-800">{selectedApplication?.email || '-'}</p>
                        </div>
                      </div>
                    </div>

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô */}
                    <div className="bg-gray-50 rounded-lg p-4">
                      <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                        <DocumentTextIcon className="w-5 h-5" />
                        ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô
                      </h4>
                      <div className="grid grid-cols-2 gap-4">
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</label>
                          <p className="text-gray-800">{selectedApplication?.idNumber || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏≠‡∏≠‡∏Å‡πÇ‡∏î‡∏¢</label>
                          <p className="text-gray-800">{selectedApplication?.idCardIssuedAt || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£</label>
                          <p className="text-gray-800">{selectedApplication?.idCardIssueDate || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ï‡∏£‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏</label>
                          <p className="text-gray-800">{selectedApplication?.idCardExpiryDate || '-'}</p>
                        </div>
                      </div>
                    </div>

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏≤‡∏°‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ö‡πâ‡∏≤‡∏ô */}
                    <div className="bg-gray-50 rounded-lg p-4">
                      <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                        <DocumentTextIcon className="w-5 h-5" />
                        ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏≤‡∏°‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ö‡πâ‡∏≤‡∏ô
                      </h4>
                      <div className="grid grid-cols-2 gap-4">
                        <div className="col-span-2">
                          <label className="text-sm font-medium text-gray-600">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</label>
                          <p className="text-gray-800">{selectedApplication?.addressAccordingToHouseRegistration || '-'}</p>
                        </div>
                      </div>
                    </div>

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô */}
                    <div className="bg-gray-50 rounded-lg p-4">
                      <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                        <DocumentTextIcon className="w-5 h-5" />
                        ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                      </h4>
                      <div className="grid grid-cols-2 gap-4">
                        <div className="col-span-2">
                          <label className="text-sm font-medium text-gray-600">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</label>
                          <p className="text-gray-800">{selectedApplication?.currentAddress || '-'}</p>
                        </div>
                      </div>
                    </div>

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô */}
                    <div className="bg-gray-50 rounded-lg p-4">
                      <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                        <DocumentTextIcon className="w-5 h-5" />
                        ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô
                      </h4>
                      <div className="grid grid-cols-2 gap-4">
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô</label>
                          <p className="text-gray-800">{selectedApplication?.emergencyContact || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå</label>
                          <p className="text-gray-800">{selectedApplication?.emergencyRelationship || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô</label>
                          <p className="text-gray-800">{selectedApplication?.emergencyPhone || '-'}</p>
                        </div>
                        <div className="col-span-2">
                          <label className="text-sm font-medium text-gray-600">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô</label>
                          <p className="text-gray-800">{selectedApplication?.emergencyAddress || '-'}</p>
                        </div>
                      </div>
                    </div>

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô */}
                    <div className="bg-gray-50 rounded-lg p-4">
                      <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                        <BriefcaseIcon className="w-5 h-5" />
                        ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô
                      </h4>
                      <div className="grid grid-cols-2 gap-4">
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£</label>
                          <p className="text-gray-800">{selectedApplication?.appliedPosition || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏ù‡πà‡∏≤‡∏¢/‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô</label>
                          <p className="text-gray-800">{selectedApplication?.department || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á</label>
                          <p className="text-gray-800">{selectedApplication?.expectedSalary || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ</label>
                          <p className="text-gray-800">{selectedApplication?.availableDate || '-'}</p>
                        </div>
                      </div>
                    </div>

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ */}
                    {selectedApplication?.education && selectedApplication.education.length > 0 && (
                      <div className="bg-gray-50 rounded-lg p-4">
                        <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                          <AcademicCapIcon className="w-5 h-5" />
                          ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
                        </h4>
                        <div className="space-y-4">
                          {selectedApplication.education.map((edu: any, index: number) => (
                            <div key={index} className="bg-white rounded-lg p-4 border">
                              <div className="grid grid-cols-2 gap-4">
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</label>
                                  <p className="text-gray-800">{edu.level || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</label>
                                  <p className="text-gray-800">{edu.institution || edu.school || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤</label>
                                  <p className="text-gray-800">{edu.major || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏ö</label>
                                  <p className="text-gray-800">{edu.year || edu.endYear || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢</label>
                                  <p className="text-gray-800">{edu.gpa || '-'}</p>
                                </div>
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>
                    )}

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô */}
                    {selectedApplication?.workExperience && selectedApplication.workExperience.length > 0 && (
                      <div className="bg-gray-50 rounded-lg p-4">
                        <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                          <BriefcaseIcon className="w-5 h-5" />
                          ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
                        </h4>
                        <div className="space-y-4">
                          {selectedApplication.workExperience.map((work: any, index: number) => (
                            <div key={index} className="bg-white rounded-lg p-4 border">
                              <div className="grid grid-cols-2 gap-4">
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</label>
                                  <p className="text-gray-800">{work.position || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó/‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£</label>
                                  <p className="text-gray-800">{work.company || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô</label>
                                  <p className="text-gray-800">{work.startDate || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</label>
                                  <p className="text-gray-800">{work.endDate || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</label>
                                  <p className="text-gray-800">{work.salary || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å</label>
                                  <p className="text-gray-800">{work.reason || work.description || '-'}</p>
                                </div>
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>
                    )}

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ */}
                    {selectedApplication?.previousGovernmentService && selectedApplication.previousGovernmentService.length > 0 && (
                      <div className="bg-gray-50 rounded-lg p-4">
                        <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                          <DocumentTextIcon className="w-5 h-5" />
                          ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
                        </h4>
                        <div className="space-y-4">
                          {selectedApplication.previousGovernmentService.map((service: any, index: number) => (
                            <div key={index} className="bg-white rounded-lg p-4 border">
                              <div className="grid grid-cols-2 gap-4">
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</label>
                                  <p className="text-gray-800">{service.position || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô</label>
                                  <p className="text-gray-800">{service.department || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</label>
                                  <p className="text-gray-800">{service.date || '-'}</p>
                                </div>
                                <div>
                                  <label className="text-sm font-medium text-gray-600">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</label>
                                  <p className="text-gray-800">{service.type || '-'}</p>
                                </div>
                                <div className="col-span-2">
                                  <label className="text-sm font-medium text-gray-600">‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•</label>
                                  <p className="text-gray-800">{service.reason || '-'}</p>
                                </div>
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>
                    )}

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏π‡πà‡∏™‡∏°‡∏£‡∏™ */}
                    {selectedApplication?.spouseInfo && (
                      <div className="bg-gray-50 rounded-lg p-4">
                        <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                          <UserIcon className="w-5 h-5" />
                          ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏π‡πà‡∏™‡∏°‡∏£‡∏™
                        </h4>
                        <div className="grid grid-cols-2 gap-4">
                          <div>
                            <label className="text-sm font-medium text-gray-600">‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏π‡πà‡∏™‡∏°‡∏£‡∏™</label>
                            <p className="text-gray-800">{selectedApplication?.spouseInfo?.firstName || '-'}</p>
                          </div>
                          <div>
                            <label className="text-sm font-medium text-gray-600">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏Ñ‡∏π‡πà‡∏™‡∏°‡∏£‡∏™</label>
                            <p className="text-gray-800">{selectedApplication?.spouseInfo?.lastName || '-'}</p>
                          </div>
                        </div>
                      </div>
                    )}

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô */}
                    {selectedApplication?.emergencyWorkplace && (
                      <div className="bg-gray-50 rounded-lg p-4">
                        <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                          <BriefcaseIcon className="w-5 h-5" />
                          ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô
                        </h4>
                        <div className="grid grid-cols-2 gap-4">
                          <div>
                            <label className="text-sm font-medium text-gray-600">‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</label>
                            <p className="text-gray-800">{selectedApplication?.emergencyWorkplace?.name || '-'}</p>
                          </div>
                          <div>
                            <label className="text-sm font-medium text-gray-600">‡πÄ‡∏Ç‡∏ï/‡∏≠‡∏≥‡πÄ‡∏†‡∏≠</label>
                            <p className="text-gray-800">{selectedApplication?.emergencyWorkplace?.district || '-'}</p>
                          </div>
                          <div>
                            <label className="text-sm font-medium text-gray-600">‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</label>
                            <p className="text-gray-800">{selectedApplication?.emergencyWorkplace?.province || '-'}</p>
                          </div>
                          <div>
                            <label className="text-sm font-medium text-gray-600">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</label>
                            <p className="text-gray-800">{selectedApplication?.emergencyWorkplace?.phone || '-'}</p>
                          </div>
                        </div>
                      </div>
                    )}

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
                    <div className="bg-gray-50 rounded-lg p-4">
                      <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                        <DocumentTextIcon className="w-5 h-5" />
                        ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
                      </h4>
                      <div className="grid grid-cols-2 gap-4">
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©</label>
                          <p className="text-gray-800">{selectedApplication?.skills || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏†‡∏≤‡∏©‡∏≤</label>
                          <p className="text-gray-800">{selectedApplication?.languages || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå</label>
                          <p className="text-gray-800">{selectedApplication?.computerSkills || '-'}</p>
                        </div>
                        <div>
                          <label className="text-sm font-medium text-gray-600">‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á</label>
                          <p className="text-gray-800">{selectedApplication?.certificates || '-'}</p>
                        </div>
                        <div className="col-span-2">
                          <label className="text-sm font-medium text-gray-600">‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á</label>
                          <p className="text-gray-800">{selectedApplication?.references || '-'}</p>
                        </div>
                      </div>
                    </div>

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö */}
                    {uploadedDocuments && uploadedDocuments.length > 0 && (
                      <div className="bg-gray-50 rounded-lg p-4">
                        <h4 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
                          <DocumentTextIcon className="w-5 h-5" />
                          ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö
                        </h4>
                        <div className="grid grid-cols-2 gap-4">
                          {uploadedDocuments.map((doc: any, index: number) => (
                            <div key={index} className="bg-white rounded-lg p-4 border">
                              <div className="flex items-center justify-between">
                                <div>
                                  <p className="font-medium text-gray-800">{doc.documentType || '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£'}</p>
                                  <p className="text-sm text-gray-600">{doc.fileName || doc.name || '-'}</p>
                                </div>
                                <Button
                                  size="sm"
                                  color="primary"
                                  variant="flat"
                                  onPress={() => handlePreviewFile(doc.filePath || doc.url, doc.fileName || doc.name)}
                                >
                                  ‡∏î‡∏π
                                </Button>
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                )}
              </ModalBody>
              <ModalFooter>
                <Button color="danger" variant="light" onPress={onClose}>
                  ‡∏õ‡∏¥‡∏î
                </Button>
                <Button color="primary" onPress={onClose}>
                  ‡∏ï‡∏Å‡∏•‡∏á
                </Button>
              </ModalFooter>
            </>
          )}
        </ModalContent>
      </Modal>

      {/* Preview File Modal */}
      {showPreviewModal && previewFile && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-2">
          <div className="bg-white rounded-lg shadow-xl max-w-6xl w-full max-h-[95vh] flex flex-col">
            <div className="flex items-center justify-between p-4 border-b">
              <h3 className="text-lg font-semibold text-gray-800">
                ‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå: {previewFile.name || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠'}
              </h3>
                    <button
                onClick={handleClosePreviewModal}
                className="text-gray-500 hover:text-gray-700 text-2xl font-bold"
              >
                √ó
                    </button>
            </div>
            <div className="flex-1 p-4 overflow-auto">
              {previewFile.type === 'pdf' ? (
                <iframe
                  src={previewFile.url}
                  className="w-full h-full border-0"
                  title={previewFile.name}
                />
              ) : previewFile.type === 'jpg' || previewFile.type === 'jpeg' || previewFile.type === 'png' || previewFile.type === 'gif' ? (
                <img
                  src={previewFile.url}
                  alt={previewFile.name}
                  className="max-w-full max-h-full object-contain mx-auto"
                />
              ) : (
                <div className="flex items-center justify-center h-64">
                  <div className="text-center">
                    <DocumentTextIcon className="w-16 h-16 text-gray-400 mx-auto mb-4" />
                    <p className="text-gray-600">‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ</p>
                    <p className="text-sm text-gray-500 mt-2">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå: {previewFile.type}</p>
                    <Button
                      color="primary"
                      variant="flat"
                      className="mt-4"
                      onClick={() => window.open(previewFile.url, '_blank')}
                    >
                      ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡∏°‡πà
                    </Button>
                  </div>
              </div>
            )}
              </div>
            <div className="flex justify-end p-4 border-t">
              <Button
                onClick={handleClosePreviewModal}
                color="primary"
                variant="solid"
              >
                ‡∏õ‡∏¥‡∏î
              </Button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
} 
